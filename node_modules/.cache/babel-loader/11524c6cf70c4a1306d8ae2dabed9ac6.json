{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar martinez = require(\"martinez-polygon-clipping\");\n\nvar invariant_1 = require(\"@turf/invariant\");\n\nvar helpers_1 = require(\"@turf/helpers\");\n/**\r\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\r\n *\r\n * @name union\r\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\r\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\r\n * @param {Object} [options={}] Optional Parameters\r\n * @param {Object} [options.properties={}] Translate Properties to output Feature\r\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\r\n * @example\r\n * var poly1 = turf.polygon([[\r\n *     [-82.574787, 35.594087],\r\n *     [-82.574787, 35.615581],\r\n *     [-82.545261, 35.615581],\r\n *     [-82.545261, 35.594087],\r\n *     [-82.574787, 35.594087]\r\n * ]], {\"fill\": \"#0f0\"});\r\n * var poly2 = turf.polygon([[\r\n *     [-82.560024, 35.585153],\r\n *     [-82.560024, 35.602602],\r\n *     [-82.52964, 35.602602],\r\n *     [-82.52964, 35.585153],\r\n *     [-82.560024, 35.585153]\r\n * ]], {\"fill\": \"#00f\"});\r\n *\r\n * var union = turf.union(poly1, poly2);\r\n *\r\n * //addToMap\r\n * var addToMap = [poly1, poly2, union];\r\n */\n\n\nfunction union(polygon1, polygon2, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var coords1 = invariant_1.getGeom(polygon1).coordinates;\n  var coords2 = invariant_1.getGeom(polygon2).coordinates;\n  var unioned = martinez.union(coords1, coords2);\n  if (unioned.length === 0) return null;\n  if (unioned.length === 1) return helpers_1.polygon(unioned[0], options.properties);else return helpers_1.multiPolygon(unioned, options.properties);\n}\n\nexports.default = union;","map":{"version":3,"sources":["/Users/jay/Documents/election-data-quality/front-end/node_modules/@turf/union/index.js"],"names":["Object","defineProperty","exports","value","martinez","require","invariant_1","helpers_1","union","polygon1","polygon2","options","coords1","getGeom","coordinates","coords2","unioned","length","polygon","properties","multiPolygon","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,2BAAD,CAAtB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,eAAD,CAAvB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAASG,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,OAAnC,EAA4C;AACxC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,MAAIC,OAAO,GAAGN,WAAW,CAACO,OAAZ,CAAoBJ,QAApB,EAA8BK,WAA5C;AACA,MAAIC,OAAO,GAAGT,WAAW,CAACO,OAAZ,CAAoBH,QAApB,EAA8BI,WAA5C;AACA,MAAIE,OAAO,GAAGZ,QAAQ,CAACI,KAAT,CAAeI,OAAf,EAAwBG,OAAxB,CAAd;AACA,MAAIC,OAAO,CAACC,MAAR,KAAmB,CAAvB,EACI,OAAO,IAAP;AACJ,MAAID,OAAO,CAACC,MAAR,KAAmB,CAAvB,EACI,OAAOV,SAAS,CAACW,OAAV,CAAkBF,OAAO,CAAC,CAAD,CAAzB,EAA8BL,OAAO,CAACQ,UAAtC,CAAP,CADJ,KAGI,OAAOZ,SAAS,CAACa,YAAV,CAAuBJ,OAAvB,EAAgCL,OAAO,CAACQ,UAAxC,CAAP;AACP;;AACDjB,OAAO,CAACmB,OAAR,GAAkBb,KAAlB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar martinez = require(\"martinez-polygon-clipping\");\r\nvar invariant_1 = require(\"@turf/invariant\");\r\nvar helpers_1 = require(\"@turf/helpers\");\r\n/**\r\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\r\n *\r\n * @name union\r\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\r\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\r\n * @param {Object} [options={}] Optional Parameters\r\n * @param {Object} [options.properties={}] Translate Properties to output Feature\r\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\r\n * @example\r\n * var poly1 = turf.polygon([[\r\n *     [-82.574787, 35.594087],\r\n *     [-82.574787, 35.615581],\r\n *     [-82.545261, 35.615581],\r\n *     [-82.545261, 35.594087],\r\n *     [-82.574787, 35.594087]\r\n * ]], {\"fill\": \"#0f0\"});\r\n * var poly2 = turf.polygon([[\r\n *     [-82.560024, 35.585153],\r\n *     [-82.560024, 35.602602],\r\n *     [-82.52964, 35.602602],\r\n *     [-82.52964, 35.585153],\r\n *     [-82.560024, 35.585153]\r\n * ]], {\"fill\": \"#00f\"});\r\n *\r\n * var union = turf.union(poly1, poly2);\r\n *\r\n * //addToMap\r\n * var addToMap = [poly1, poly2, union];\r\n */\r\nfunction union(polygon1, polygon2, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var coords1 = invariant_1.getGeom(polygon1).coordinates;\r\n    var coords2 = invariant_1.getGeom(polygon2).coordinates;\r\n    var unioned = martinez.union(coords1, coords2);\r\n    if (unioned.length === 0)\r\n        return null;\r\n    if (unioned.length === 1)\r\n        return helpers_1.polygon(unioned[0], options.properties);\r\n    else\r\n        return helpers_1.multiPolygon(unioned, options.properties);\r\n}\r\nexports.default = union;\r\n"]},"metadata":{},"sourceType":"script"}